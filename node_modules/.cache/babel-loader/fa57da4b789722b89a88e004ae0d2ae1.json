{"ast":null,"code":"import _classCallCheck from \"/Users/russellscharf/Desktop/Twitch-Dashboard/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/russellscharf/Desktop/Twitch-Dashboard/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/russellscharf/Desktop/Twitch-Dashboard/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/russellscharf/Desktop/Twitch-Dashboard/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/russellscharf/Desktop/Twitch-Dashboard/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/russellscharf/Desktop/Twitch-Dashboard/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/russellscharf/Desktop/Twitch-Dashboard/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Button } from \"react-bootstrap\";\nimport Header from \"./MyHeader\";\nimport SearchBar from \"./MySearchBar\";\nvar APIid = \"2x21yf8b7p6a6z6agpbc4cdsf0cy8d\";\nvar url = \"https://api.twitch.tv/helix/streams?\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.search = _this.search.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      items: [],\n      loading: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.setState({\n        loading: true\n      });\n\n      var test_access_token = function test_access_token() {\n        fetch(url, {\n          headers: {\n            \"Client-Id\": APIid\n          }\n        }).then(function (res) {\n          return res.json();\n        }).then(function (json) {\n          _this2.setState({\n            items: json.streams,\n            loading: false\n          });\n\n          console.log(\"json response: \", json);\n          console.log(\"this.state response: \", _this2.state);\n          console.log(\"Index zero game: \", json.streams[0].game);\n          console.log(\"Index zero game: \", _this2.state.items[0].game);\n          console.log(_this2.state.items[2]);\n        });\n      };\n\n      test_access_token();\n    }\n  }, {\n    key: \"search\",\n    value: function search(event) {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          loading = _this$state.loading,\n          items = _this$state.items;\n\n      if (loading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, \"Loading...\");\n      } else {\n        return React.createElement(\"div\", {\n          className: \"box\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, React.createElement(Header, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }), React.createElement(SearchBar, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, this.state.items.map(function (item) {\n          return React.createElement(\"div\", {\n            className: \"stream container\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"row\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"stream-image col-sm-4\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            src: item.channel.logo,\n            alt: \"\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60\n            },\n            __self: this\n          })), React.createElement(\"div\", {\n            className: \"stream-info col-sm-7\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62\n            },\n            __self: this\n          }, React.createElement(\"h5\", {\n            className: \"name\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63\n            },\n            __self: this\n          }, item.channel.display_name), React.createElement(\"p\", {\n            className: \"game\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64\n            },\n            __self: this\n          }, item.game), React.createElement(\"p\", {\n            className: \"viewers\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65\n            },\n            __self: this\n          }, \"Viewers: \", item.viewers), React.createElement(\"p\", {\n            className: \"description\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66\n            },\n            __self: this\n          }, item.channel.status))), React.createElement(\"hr\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69\n            },\n            __self: this\n          }));\n        }))); // return (\n        //   <div className=\"box\">\n        //     <Header />\n        //     <SearchBar />\n        //     {myStreams}\n        //     <Stream\n        //       stream={{\n        //         image: \"test\",\n        //         name: \"test\",\n        //         game: \"Fort\",\n        //         viewers: \"5\",\n        //         description: \"test\"\n        //       }}\n        //     />\n        //     <Button bsstyle=\"success\">Test Button</Button>\n        //   </div>\n        // );\n      }\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App; // The stream needs to be passed attributes\n// <Stream\n//    stream={{image:\"\" name:\"\" game:\"\" viewers:\"\" description:\"\"}}\n// />\n// Info above is usually coming from a JSON file, so passing it as a single prop (in this case \"stream\") is useful\n// Take an array of raw data and turn it into a number of components (1:41 in video)\n// const nums = [1, 2, 3, 4, 5]\n// const doubled = nums.map(function(num) {      function receives each individual number in the array\n//  return num*2                                  map function creates new array\n// })\n// streamData.js is a file\n// function App {\n// const streamComponents = streamData.map(stream => {      // returns an array of stream components\n//   return (\n//    <Stream key={stream.id} image={stream.image} name={stream.name} game={stream.game} viewers={stream.viewers} description={stream.description}/>\n//   )\n// })\n//\n// return (\n//   <div>\n//     {streamComponents}\n//   </div>\n// )\n// export default App","map":{"version":3,"sources":["/Users/russellscharf/Desktop/Twitch-Dashboard/src/App.js"],"names":["React","Component","Button","Header","SearchBar","APIid","url","App","props","search","bind","state","items","loading","setState","test_access_token","fetch","headers","then","res","json","streams","console","log","game","event","map","item","channel","logo","display_name","viewers","status"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Button } from \"react-bootstrap\";\n\nimport Header from \"./MyHeader\";\nimport SearchBar from \"./MySearchBar\";\nvar APIid = \"2x21yf8b7p6a6z6agpbc4cdsf0cy8d\";\nvar url = \"https://api.twitch.tv/helix/streams?\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.search = this.search.bind(this);\n    this.state = {\n      items: [],\n      loading: false\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ loading: true });\n    const test_access_token = () => {\n      fetch(url, {\n        headers: {\n          \"Client-Id\": APIid\n        }\n      })\n        .then(res => res.json())\n        .then(json => {\n          this.setState({\n            items: json.streams,\n            loading: false\n          });\n          console.log(\"json response: \", json);\n          console.log(\"this.state response: \", this.state);\n          console.log(\"Index zero game: \", json.streams[0].game);\n          console.log(\"Index zero game: \", this.state.items[0].game);\n          console.log(this.state.items[2]);\n        });\n    };\n    test_access_token();\n  }\n\n  search(event) {}\n\n  render() {\n    var { loading, items } = this.state;\n    if (loading) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        <div className=\"box\">\n          <Header />\n          <SearchBar />\n          <div>\n            {this.state.items.map(item => (\n              <div className=\"stream container\">\n                <div className=\"row\">\n                  <div className=\"stream-image col-sm-4\">\n                    <img src={item.channel.logo} alt=\"\" />\n                  </div>\n                  <div className=\"stream-info col-sm-7\">\n                    <h5 className=\"name\">{item.channel.display_name}</h5>\n                    <p className=\"game\">{item.game}</p>\n                    <p className=\"viewers\">Viewers: {item.viewers}</p>\n                    <p className=\"description\">{item.channel.status}</p>\n                  </div>\n                </div>\n                <hr />\n              </div>\n            ))}\n          </div>\n        </div>\n      );\n      // return (\n      //   <div className=\"box\">\n      //     <Header />\n      //     <SearchBar />\n      //     {myStreams}\n      //     <Stream\n      //       stream={{\n      //         image: \"test\",\n      //         name: \"test\",\n      //         game: \"Fort\",\n      //         viewers: \"5\",\n      //         description: \"test\"\n      //       }}\n      //     />\n      //     <Button bsstyle=\"success\">Test Button</Button>\n      //   </div>\n      // );\n    }\n  }\n}\n\nexport default App;\n\n// The stream needs to be passed attributes\n// <Stream\n//    stream={{image:\"\" name:\"\" game:\"\" viewers:\"\" description:\"\"}}\n// />\n\n// Info above is usually coming from a JSON file, so passing it as a single prop (in this case \"stream\") is useful\n\n// Take an array of raw data and turn it into a number of components (1:41 in video)\n// const nums = [1, 2, 3, 4, 5]\n// const doubled = nums.map(function(num) {      function receives each individual number in the array\n//  return num*2                                  map function creates new array\n// })\n\n// streamData.js is a file\n// function App {\n// const streamComponents = streamData.map(stream => {      // returns an array of stream components\n//   return (\n//    <Stream key={stream.id} image={stream.image} name={stream.name} game={stream.game} viewers={stream.viewers} description={stream.description}/>\n//   )\n// })\n//\n// return (\n//   <div>\n//     {streamComponents}\n//   </div>\n// )\n// export default App\n"]},"metadata":{},"sourceType":"module"}