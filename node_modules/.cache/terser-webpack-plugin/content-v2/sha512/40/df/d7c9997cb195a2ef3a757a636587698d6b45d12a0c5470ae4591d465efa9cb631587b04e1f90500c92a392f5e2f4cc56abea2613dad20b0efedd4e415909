{"map":"{\"version\":3,\"sources\":[\"/Users/russellscharf/Desktop/Twitch-Dashboard/src/MyHeader.js\",\"/Users/russellscharf/Desktop/Twitch-Dashboard/src/MySearchBar.js\",\"/Users/russellscharf/Desktop/Twitch-Dashboard/src/App.js\",\"/Users/russellscharf/Desktop/Twitch-Dashboard/src/serviceWorker.js\",\"/Users/russellscharf/Desktop/Twitch-Dashboard/src/index.js\"],\"names\":[\"Header\",\"react_default\",\"a\",\"createElement\",\"Component\",\"SearchBar\",\"id\",\"onSubmit\",\"this\",\"props\",\"search\",\"value\",\"input\",\"onChange\",\"type\",\"placeholder\",\"Button\",\"className\",\"games\",\"gameIds\",\"App\",\"_this\",\"Object\",\"classCallCheck\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"bind\",\"assertThisInitialized\",\"state\",\"items\",\"loading\",\"event\",\"setState\",\"target\",\"console\",\"log\",\"_this2\",\"fetch\",\"headers\",\"Client-Id\",\"then\",\"res\",\"json\",\"data\",\"user_name\",\"indexOf\",\"preventDefault\",\"_this$state\",\"MyHeader\",\"MySearchBar\",\"map\",\"item\",\"src\",\"language\",\"alt\",\"game_id\",\"viewer_count\",\"title\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React, { Component } from \\\"react\\\";\\n\\nclass Header extends Component {\\n  render() {\\n    return <h2>Twitch Dashboard</h2>;\\n  }\\n}\\n\\nexport default Header;\\n\",\"import React, { Component } from \\\"react\\\";\\nimport { Button } from \\\"react-bootstrap\\\";\\n\\nclass SearchBar extends Component {\\n  render() {\\n    return (\\n      <form id=\\\"seach-form\\\" onSubmit={this.props.search}>\\n        <input\\n          id=\\\"game-search\\\"\\n          value={this.props.input}\\n          onChange={this.props.onChange}\\n          type=\\\"text\\\"\\n          placeholder=\\\"Search Game...\\\"\\n        />\\n        <Button className=\\\"btn-sm\\\" id=\\\"new-submit\\\">\\n          Go\\n        </Button>\\n      </form>\\n    );\\n  }\\n}\\n\\nexport default SearchBar;\\n\",\"import React, { Component } from \\\"react\\\";\\nimport \\\"./App.css\\\";\\nimport { Button } from \\\"react-bootstrap\\\";\\n\\nimport Header from \\\"./MyHeader\\\";\\nimport SearchBar from \\\"./MySearchBar\\\";\\nvar APIid = \\\"2x21yf8b7p6a6z6agpbc4cdsf0cy8d\\\";\\nvar url = \\\"https://api.twitch.tv/helix/streams?game_id=33214\\\";\\nvar games = [\\n  \\\"Fortnite\\\",\\n  \\\"Grand Theft Auto V\\\",\\n  \\\"League of Legends\\\",\\n  \\\"Just Chatting\\\",\\n  \\\"Apex Legends\\\",\\n  \\\"Dota 2\\\",\\n  \\\"Counter - Strike: Global Offensiver\\\",\\n  \\\"Tom Clancy's The Division 2\\\",\\n  \\\"Overwatch\\\",\\n  \\\"Hearthstone\\\",\\n  \\\"World of Warcraft\\\",\\n  \\\"Path of Exile\\\",\\n  \\\"Player Unknown Battlegrounds\\\",\\n  \\\"Tom Clancy's Rainbow Six: Siege\\\",\\n  \\\"Dead by Daylight\\\",\\n  \\\"Sea of Thieves\\\",\\n  \\\"Old School RuneScape\\\",\\n  \\\"Special Events\\\",\\n  \\\"Call of Duty: Black Ops 4\\\",\\n  \\\"Dungeons & Dragons\\\"\\n];\\nvar gameIds = [\\n  33214,\\n  32982,\\n  21779,\\n  509658,\\n  511224,\\n  29595,\\n  32399,\\n  504463,\\n  488552,\\n  138585,\\n  18122,\\n  29307,\\n  493057,\\n  460630,\\n  491487,\\n  490377,\\n  459931,\\n  509663,\\n  504462,\\n  509577\\n];\\n\\n// https://api.twitch.tv/helix/streams?\\n// https://api.twitch.tv/kraken/streams/\\n// https://api.twitch.tv/helix/streams?game_id=33214\\n\\nclass App extends Component {\\n  constructor(props) {\\n    super(props);\\n    this.search = this.search.bind(this);\\n    this.onChange = this.onChange.bind(this);\\n    this.state = {\\n      items: [],\\n      loading: false\\n    };\\n  }\\n\\n  onChange(event) {\\n    this.setState({\\n      input: event.target.value\\n    });\\n    console.log(\\\"testtt\\\");\\n  }\\n\\n  componentDidMount() {\\n    this.setState({ loading: true });\\n    const test_access_token = () => {\\n      fetch(url, {\\n        headers: {\\n          \\\"Client-Id\\\": APIid\\n        }\\n      })\\n        .then(res => res.json())\\n        .then(json => {\\n          this.setState({\\n            items: json.data,\\n            loading: false\\n          });\\n          console.log(\\\"json response: \\\", json);\\n          console.log(\\\"this.state response: \\\", this.state);\\n          console.log(\\\"Index zero name: \\\", this.state.items[0].user_name);\\n          console.log(games[gameIds.indexOf(33214)]);\\n\\n          // { games[gameIds.indexOf(item.game_id)] }\\n        });\\n    };\\n    test_access_token();\\n  }\\n\\n  search(event) {\\n    console.log(\\\"search method\\\");\\n    event.preventDefault();\\n    var self = this;\\n\\n    var newId;\\n  }\\n\\n  render() {\\n    var { loading, items } = this.state;\\n    var myGame = games[gameIds.indexOf(33214)];\\n    if (loading) {\\n      return <div>Loading...</div>;\\n    } else {\\n      return (\\n        <div className=\\\"box\\\">\\n          <Header />\\n          <SearchBar />\\n          <div>\\n            {this.state.items.map(item => (\\n              <div className=\\\"stream container\\\">\\n                <div className=\\\"row\\\">\\n                  <div className=\\\"stream-image col-sm-4\\\">\\n                    <img src={item.language} alt=\\\"\\\" />\\n                    {/* Thumbnail image */}\\n                  </div>\\n                  <div className=\\\"stream-info col-sm-7\\\">\\n                    <h5 className=\\\"name\\\">{item.user_name}</h5>\\n                    <p className=\\\"game\\\">\\n                      Playing {games[gameIds.indexOf(item.game_id)]}\\n                      {/* Not working  */}\\n                    </p>\\n                    <p className=\\\"viewers\\\">Viewers: {item.viewer_count}</p>\\n                    <p className=\\\"description\\\">Description: {item.title}</p>\\n                  </div>\\n                </div>\\n              </div>\\n            ))}\\n          </div>\\n        </div>\\n      );\\n    }\\n  }\\n}\\n\\nexport default App;\\n\\n// Thumbnail picture\\n// Playing....\\n// Search\\n// When user enters a search, a function must run to change \\\"url\\\" variable and then refresh the whole app\\n// Map entered game with game id?\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from \\\"react\\\";\\nimport ReactDOM from \\\"react-dom\\\";\\nimport \\\"./index.css\\\";\\nimport App from \\\"./App\\\";\\nimport * as serviceWorker from \\\"./serviceWorker\\\";\\n\\nReactDOM.render(<App />, document.getElementById(\\\"root\\\"));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{12:function(e,t,a){e.exports=a(20)},18:function(e,t,a){},19:function(e,t,a){},20:function(e,t,a){\"use strict\";a.r(t);var n=a(0),o=a.n(n),s=a(9),i=a.n(s),c=(a(18),a(2)),r=a(3),l=a(6),m=a(4),u=a(5),h=a(1),d=(a(19),function(e){function t(){return Object(c.a)(this,t),Object(l.a)(this,Object(m.a)(t).apply(this,arguments))}return Object(u.a)(t,e),Object(r.a)(t,[{key:\"render\",value:function(){return o.a.createElement(\"h2\",null,\"Twitch Dashboard\")}}]),t}(n.Component)),p=a(21),g=function(e){function t(){return Object(c.a)(this,t),Object(l.a)(this,Object(m.a)(t).apply(this,arguments))}return Object(u.a)(t,e),Object(r.a)(t,[{key:\"render\",value:function(){return o.a.createElement(\"form\",{id:\"seach-form\",onSubmit:this.props.search},o.a.createElement(\"input\",{id:\"game-search\",value:this.props.input,onChange:this.props.onChange,type:\"text\",placeholder:\"Search Game...\"}),o.a.createElement(p.a,{className:\"btn-sm\",id:\"new-submit\"},\"Go\"))}}]),t}(n.Component),f=[\"Fortnite\",\"Grand Theft Auto V\",\"League of Legends\",\"Just Chatting\",\"Apex Legends\",\"Dota 2\",\"Counter - Strike: Global Offensiver\",\"Tom Clancy's The Division 2\",\"Overwatch\",\"Hearthstone\",\"World of Warcraft\",\"Path of Exile\",\"Player Unknown Battlegrounds\",\"Tom Clancy's Rainbow Six: Siege\",\"Dead by Daylight\",\"Sea of Thieves\",\"Old School RuneScape\",\"Special Events\",\"Call of Duty: Black Ops 4\",\"Dungeons & Dragons\"],b=[33214,32982,21779,509658,511224,29595,32399,504463,488552,138585,18122,29307,493057,460630,491487,490377,459931,509663,504462,509577],v=function(e){function t(e){var a;return Object(c.a)(this,t),(a=Object(l.a)(this,Object(m.a)(t).call(this,e))).search=a.search.bind(Object(h.a)(Object(h.a)(a))),a.onChange=a.onChange.bind(Object(h.a)(Object(h.a)(a))),a.state={items:[],loading:!1},a}return Object(u.a)(t,e),Object(r.a)(t,[{key:\"onChange\",value:function(e){this.setState({input:e.target.value}),console.log(\"testtt\")}},{key:\"componentDidMount\",value:function(){var e=this;this.setState({loading:!0});fetch(\"https://api.twitch.tv/helix/streams?game_id=33214\",{headers:{\"Client-Id\":\"2x21yf8b7p6a6z6agpbc4cdsf0cy8d\"}}).then(function(e){return e.json()}).then(function(t){e.setState({items:t.data,loading:!1}),console.log(\"json response: \",t),console.log(\"this.state response: \",e.state),console.log(\"Index zero name: \",e.state.items[0].user_name),console.log(f[b.indexOf(33214)])})}},{key:\"search\",value:function(e){console.log(\"search method\"),e.preventDefault()}},{key:\"render\",value:function(){var e=this.state,t=e.loading;e.items,b.indexOf(33214);return t?o.a.createElement(\"div\",null,\"Loading...\"):o.a.createElement(\"div\",{className:\"box\"},o.a.createElement(d,null),o.a.createElement(g,null),o.a.createElement(\"div\",null,this.state.items.map(function(e){return o.a.createElement(\"div\",{className:\"stream container\"},o.a.createElement(\"div\",{className:\"row\"},o.a.createElement(\"div\",{className:\"stream-image col-sm-4\"},o.a.createElement(\"img\",{src:e.language,alt:\"\"})),o.a.createElement(\"div\",{className:\"stream-info col-sm-7\"},o.a.createElement(\"h5\",{className:\"name\"},e.user_name),o.a.createElement(\"p\",{className:\"game\"},\"Playing \",f[b.indexOf(e.game_id)]),o.a.createElement(\"p\",{className:\"viewers\"},\"Viewers: \",e.viewer_count),o.a.createElement(\"p\",{className:\"description\"},\"Description: \",e.title))))})))}}]),t}(n.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));i.a.render(o.a.createElement(v,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[12,1,2]]]);","extractedComments":[]}