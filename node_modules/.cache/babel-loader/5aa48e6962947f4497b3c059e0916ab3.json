{"ast":null,"code":"import _classCallCheck from \"/Users/russellscharf/Desktop/twitch-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/russellscharf/Desktop/twitch-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/russellscharf/Desktop/twitch-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/russellscharf/Desktop/twitch-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/russellscharf/Desktop/twitch-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/russellscharf/Desktop/twitch-app/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Button } from \"react-bootstrap\";\nimport Header from \"./MyHeader\";\nimport SearchBar from \"./MySearchBar\";\nimport Stream from \"./MyStream\";\nimport Data from \"./MyData\";\nvar APIid = \"2x21yf8b7p6a6z6agpbc4cdsf0cy8d\";\nvar array1 = [];\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      loading: false,\n      items: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.setState({\n        loading: true\n      });\n\n      var test_access_token = function test_access_token() {\n        fetch(\"https://api.twitch.tv/kraken/streams/\", {\n          headers: {\n            \"Client-Id\": APIid\n          }\n        }).then(function (res) {\n          return res.json();\n        }).then(function (json) {\n          _this2.setState({\n            loading: false,\n            items: json\n          });\n\n          console.log(\"response: \", json);\n          console.log(\"Index zero game: \", json.streams[0].game);\n          console.log(\"Items: \", _this2.state.items.streams[0].game);\n          console.log(_this2.state.items.streams);\n          array1 = _this2.state.items.streams;\n          console.log(\"array1 \", array1);\n          console.log(\"array1 \", array1[0].game);\n        });\n      };\n\n      test_access_token();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          loading = _this$state.loading,\n          items = _this$state.items;\n\n      if (loading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, \"Loading...\");\n      } else {\n        return React.createElement(\"div\", {\n          className: \"box\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, React.createElement(Header, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }), React.createElement(SearchBar, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }), React.createElement(Stream, {\n          stream: {\n            image: \"test\",\n            name: \"test\",\n            game: \"Fort\",\n            viewers: \"5\",\n            description: \"test\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }), array1.map(function (item) {\n          return React.createElement(Stream, {\n            image: item.game,\n            name: item.game,\n            game: item.game,\n            viewers: item.game,\n            description: item.game,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66\n            },\n            __self: this\n          });\n        }), React.createElement(Button, {\n          bsstyle: \"success\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, \"Test Button\"));\n      }\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;\n{}\n/* <Stream\nstream={{\n  image: \"test\",\n  name: \"test\",\n  game: \"Fort\",\n  viewers: \"5\",\n  description: \"test\"\n}}\n/> */\n// The stream needs to be passed attributes\n// <Stream\n//    stream={{image:\"\" name:\"\" game:\"\" viewers:\"\" description:\"\"}}\n// />\n// Info above is usually coming from a JSON file, so passing it as a single prop (in this case \"stream\") is useful\n// Take an array of raw data and turn it into a number of components (1:41 in video)\n// const nums = [1, 2, 3, 4, 5]\n// const doubled = nums.map(function(num) {      function receives each individual number in the array\n//  return num*2                                  map function creates new array\n// })\n// streamData.js is a file\n// function App {\n// const streamComponents = streamData.map(stream => {      // returns an array of stream components\n//   return (\n//    <Stream key={stream.id} image={stream.image} name={stream.name} game={stream.game} viewers={stream.viewers} description={stream.description}/>\n//   )\n// })\n//\n// return (\n//   <div>\n//     {streamComponents}\n//   </div>\n// )\n// export default App","map":{"version":3,"sources":["/Users/russellscharf/Desktop/twitch-app/src/App.js"],"names":["React","Component","Button","Header","SearchBar","Stream","Data","APIid","array1","App","props","state","loading","items","setState","test_access_token","fetch","headers","then","res","json","console","log","streams","game","image","name","viewers","description","map","item"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Button } from \"react-bootstrap\";\n\nimport Header from \"./MyHeader\";\nimport SearchBar from \"./MySearchBar\";\nimport Stream from \"./MyStream\";\nimport Data from \"./MyData\";\nvar APIid = \"2x21yf8b7p6a6z6agpbc4cdsf0cy8d\";\nvar array1 = [];\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ loading: true });\n    const test_access_token = () => {\n      fetch(\"https://api.twitch.tv/kraken/streams/\", {\n        headers: {\n          \"Client-Id\": APIid\n        }\n      })\n        .then(res => res.json())\n        .then(json => {\n          this.setState({\n            loading: false,\n            items: json\n          });\n          console.log(\"response: \", json);\n          console.log(\"Index zero game: \", json.streams[0].game);\n          console.log(\"Items: \", this.state.items.streams[0].game);\n          console.log(this.state.items.streams);\n          array1 = this.state.items.streams;\n          console.log(\"array1 \", array1);\n          console.log(\"array1 \", array1[0].game);\n        });\n    };\n    test_access_token();\n  }\n\n  render() {\n    var { loading, items } = this.state;\n    if (loading) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        <div className=\"box\">\n          <Header />\n          <SearchBar />\n          <Stream\n            stream={{\n              image: \"test\",\n              name: \"test\",\n              game: \"Fort\",\n              viewers: \"5\",\n              description: \"test\"\n            }}\n          />\n          {array1.map(item => (\n            <Stream\n              image={item.game}\n              name={item.game}\n              game={item.game}\n              viewers={item.game}\n              description={item.game}\n            />\n          ))}\n          <Button bsstyle=\"success\">Test Button</Button>\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;\n\n{\n  /* <Stream\n  stream={{\n    image: \"test\",\n    name: \"test\",\n    game: \"Fort\",\n    viewers: \"5\",\n    description: \"test\"\n  }}\n/> */\n}\n\n// The stream needs to be passed attributes\n// <Stream\n//    stream={{image:\"\" name:\"\" game:\"\" viewers:\"\" description:\"\"}}\n// />\n\n// Info above is usually coming from a JSON file, so passing it as a single prop (in this case \"stream\") is useful\n\n// Take an array of raw data and turn it into a number of components (1:41 in video)\n// const nums = [1, 2, 3, 4, 5]\n// const doubled = nums.map(function(num) {      function receives each individual number in the array\n//  return num*2                                  map function creates new array\n// })\n\n// streamData.js is a file\n// function App {\n// const streamComponents = streamData.map(stream => {      // returns an array of stream components\n//   return (\n//    <Stream key={stream.id} image={stream.image} name={stream.name} game={stream.game} viewers={stream.viewers} description={stream.description}/>\n//   )\n// })\n//\n// return (\n//   <div>\n//     {streamComponents}\n//   </div>\n// )\n// export default App\n"]},"metadata":{},"sourceType":"module"}