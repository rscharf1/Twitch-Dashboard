{"ast":null,"code":"import _classCallCheck from \"/Users/russellscharf/Desktop/twitch-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/russellscharf/Desktop/twitch-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/russellscharf/Desktop/twitch-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/russellscharf/Desktop/twitch-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/russellscharf/Desktop/twitch-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/russellscharf/Desktop/twitch-app/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Button } from \"react-bootstrap\";\nimport Header from \"./MyHeader\";\nimport SearchBar from \"./MySearchBar\";\nimport Stream from \"./MyStream\"; // import Background from \"./MyBackground\";\n\nvar apiKey = \"2x21yf8b7p6a6z6agpbc4cdsf0cy8d\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var self = this;\n      var listRequest = new XMLHttpRequest();\n\n      listRequest.onreadystatechange = function () {\n        if (this.readyState === 4 && this.status === 200) {\n          var todos = JSON.parse(this.responseText);\n        } else if (this.readyState === 4) {\n          console.log(this.responseText);\n        }\n      };\n\n      console.log(\"make request\");\n      listRequest.open(\"GET\", \"https://api.twitch.tv/helix/streams?game_id=33214\", true);\n      listRequest.setRequestHeader(\"Client-ID\", apiKey);\n      listRequest.send();\n      console.log(this.responseText);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), React.createElement(SearchBar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), React.createElement(Stream, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), React.createElement(Button, {\n        bsstyle: \"success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Test\"));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App; // The stream needs to be passed attributes\n// <Stream\n//    stream={{image:\"\" name:\"\" game:\"\" viewers:\"\" description:\"\"}}\n// />\n// Info above is usually coming from a JSON file, so passing it as a single prop (in this case \"stream\") is useful\n// Take an array of raw data and turn it into a number of components (1:41 in video)\n// const nums = [1, 2, 3, 4, 5]\n// const doubled = nums.map(function(num) {      function receives each individual number in the array\n//  return num*2                                  map function creates new array\n// })\n// streamData.js is a file\n// function App {\n// const streamComponents = streamData.map(stream => {      // returns an array of stream components\n//   return (\n//    <Stream key={stream.id} image={stream.image} name={stream.name} game={stream.game} viewers={stream.viewers} description={stream.description}/>\n//   )\n// })\n//\n// return (\n//   <div>\n//     {streamComponents}\n//   </div>\n// )\n// export default App","map":{"version":3,"sources":["/Users/russellscharf/Desktop/twitch-app/src/App.js"],"names":["React","Component","Button","Header","SearchBar","Stream","apiKey","App","state","self","listRequest","XMLHttpRequest","onreadystatechange","readyState","status","todos","JSON","parse","responseText","console","log","open","setRequestHeader","send"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,SAASC,MAAT,QAAuB,iBAAvB;AAEA,OAAOC,MAAP,MAAmB,YAAnB;AACA,OAAOC,SAAP,MAAsB,eAAtB;AACA,OAAOC,MAAP,MAAmB,YAAnB,C,CACA;;AACA,IAAIC,MAAM,GAAG,gCAAb;;IAEMC,G;;;;;AACJ,iBAAc;AAAA;;AAAA;;AACZ;AACA,UAAKC,KAAL,GAAa,EAAb;AAFY;AAGb;;;;wCAEmB;AAClB,UAAIC,IAAI,GAAG,IAAX;AACA,UAAIC,WAAW,GAAG,IAAIC,cAAJ,EAAlB;;AACAD,MAAAA,WAAW,CAACE,kBAAZ,GAAiC,YAAW;AAC1C,YAAI,KAAKC,UAAL,KAAoB,CAApB,IAAyB,KAAKC,MAAL,KAAgB,GAA7C,EAAkD;AAChD,cAAIC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAW,KAAKC,YAAhB,CAAZ;AACD,SAFD,MAEO,IAAI,KAAKL,UAAL,KAAoB,CAAxB,EAA2B;AAChCM,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,YAAjB;AACD;AACF,OAND;;AAOAC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAV,MAAAA,WAAW,CAACW,IAAZ,CACE,KADF,EAEE,mDAFF,EAGE,IAHF;AAKAX,MAAAA,WAAW,CAACY,gBAAZ,CAA6B,WAA7B,EAA0ChB,MAA1C;AACAI,MAAAA,WAAW,CAACa,IAAZ;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,YAAjB;AACD;;;6BAEQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAIE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,CADF;AAQD;;;;EApCejB,S;;AAuClB,eAAeM,GAAf,C,CAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Button } from \"react-bootstrap\";\n\nimport Header from \"./MyHeader\";\nimport SearchBar from \"./MySearchBar\";\nimport Stream from \"./MyStream\";\n// import Background from \"./MyBackground\";\nvar apiKey = \"2x21yf8b7p6a6z6agpbc4cdsf0cy8d\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n\n  componentDidMount() {\n    var self = this;\n    var listRequest = new XMLHttpRequest();\n    listRequest.onreadystatechange = function() {\n      if (this.readyState === 4 && this.status === 200) {\n        var todos = JSON.parse(this.responseText);\n      } else if (this.readyState === 4) {\n        console.log(this.responseText);\n      }\n    };\n    console.log(\"make request\");\n    listRequest.open(\n      \"GET\",\n      \"https://api.twitch.tv/helix/streams?game_id=33214\",\n      true\n    );\n    listRequest.setRequestHeader(\"Client-ID\", apiKey);\n    listRequest.send();\n    console.log(this.responseText);\n  }\n\n  render() {\n    return (\n      <div className=\"box\">\n        <Header />\n        <SearchBar />\n        <Stream />\n        <Button bsstyle=\"success\">Test</Button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n// The stream needs to be passed attributes\n// <Stream\n//    stream={{image:\"\" name:\"\" game:\"\" viewers:\"\" description:\"\"}}\n// />\n\n// Info above is usually coming from a JSON file, so passing it as a single prop (in this case \"stream\") is useful\n\n// Take an array of raw data and turn it into a number of components (1:41 in video)\n// const nums = [1, 2, 3, 4, 5]\n// const doubled = nums.map(function(num) {      function receives each individual number in the array\n//  return num*2                                  map function creates new array\n// })\n\n// streamData.js is a file\n// function App {\n// const streamComponents = streamData.map(stream => {      // returns an array of stream components\n//   return (\n//    <Stream key={stream.id} image={stream.image} name={stream.name} game={stream.game} viewers={stream.viewers} description={stream.description}/>\n//   )\n// })\n//\n// return (\n//   <div>\n//     {streamComponents}\n//   </div>\n// )\n// export default App\n"]},"metadata":{},"sourceType":"module"}